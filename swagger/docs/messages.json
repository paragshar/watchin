{
    "apiVersion":"0.1",
    "swaggerVersion":"1.1",
    "resourcePath":"/messages",
    "apis":[
    {
        "path":"/messages.json?auth_token={auth_token}",
        "description":"Operation for creating a message for a logged in user.",
        "operations":[
        {
            "httpMethod":"POST",
            "summary":"Create a new message.",
            "responseClass":"void",
            "nickname":"postMessageCreate",
            "parameters":[
            {
                "name":"auth_token",
                "description":"Auth token required for posting a message",
                "paramType":"path",
                "required":true,
                "allowMultiple":false,
                "dataType":"string"
            },
            {
                "name":"message[channel_id]",
                "paramType":"query",
                "required":true,
                "allowMultiple":false,
                "dataType":"integer"
            },
            {
                "name":"message[programme_id]",
                "paramType":"query",
                "required":true,
                "allowMultiple":false,
                "dataType":"integer"
            },
            {
                "name":"message[message]",
                "paramType":"query",
                "required":true,
                "allowMultiple":false,
                "dataType":"string"
            },
            {
                "name":"message[view_ability]",
                "paramType":"query",
                "required":true,
                "allowMultiple":false,
                "dataType":"string"
            }
            ],
            "errorResponses":[
            {
                "code":400,
                "reason":""
            },
            {
                "code":405,
                "reason":""
            },
            {
                "code":409,
                "reason":""
            }
            ]
        }
        ]
    },
    {
        "path":"/messages/{message_id}.json",
        "description":"Operation for reading a message.",
        "operations":[
        {
            "httpMethod":"GET",
            "summary":"Read an message by id",
            "responseClass":"void",
            "nickname":"getMessageById",
            "parameters":[
            {
                "name":"message_id",
                "description":"The id that needs to be fetched.",
                "paramType":"path",
                "required":true,
                "allowMultiple":false,
                "dataType":"string"
            }
            ],
            "errorResponses":[
            {
                "code":400,
                "reason":"Id is missing."
            },
            {
                "code":403,
                "reason":""
            },
            {
                "code":405,
                "reason":""
            },
            {
                "code":409,
                "reason":""
            }
            ]
        }
        ]
    },
    {
        "path":"/messages.json",
        "description":"Operation for reading loggedin users messages.",
        "operations":[
        {
            "httpMethod":"GET",
            "summary":"Read a list of messages for a logged in user.<strong style=\"color: black\">(Login required)</strong>",
            "responseClass":"void",
            "nickname":"getMessageList",
            "parameters":[
            
            ],
            "errorResponses":[
            {
                "code":400,
                "reason":"eventId is missing."
            },
            {
                "code":403,
                "reason":""
            },
            {
                "code":405,
                "reason":""
            },
            {
                "code":409,
                "reason":""
            }
            ]
        }
        ]
    },
	{
        "path":"/messages/friends.json?auth_token={auth_token}",
        "description":"Operation for reading all friends messages.",
        "operations":[
        {
            "httpMethod":"GET",
            "summary":"Read a list of messages by all friends for a logged in user.<strong style=\"color: black\">(Login required)</strong>",
            "responseClass":"void",
            "nickname":"getFriendsMessageList",
            "parameters":[
            {
                "name":"auth_token",
                "description":"Auth token required for posting a message.",
                "paramType":"path",
                "required":true,
                "allowMultiple":false,
                "dataType":"string"
            }
            ],
            "errorResponses":[
            {
                "code":400,
                "reason":"eventId is missing."
            },
            {
                "code":403,
                "reason":""
            },
            {
                "code":405,
                "reason":""
            },
            {
                "code":409,
                "reason":""
            }
            ]
        }
        ]
    },
	{
        "path":"/messages/friends/{programme_id}.json?auth_token={auth_token}",
        "description":"Operation for reading all friends messages.",
        "operations":[
        {
            "httpMethod":"GET",
            "summary":"Read a list of messages by all friends for a logged in user.<strong style=\"color: black\">(Login required)</strong>",
            "responseClass":"void",
            "nickname":"getFriendsMessageListByProgrammeId",
            "parameters":[
            {
                "name":"auth_token",
                "description":"Auth token required for posting a message.",
                "paramType":"path",
                "required":true,
                "allowMultiple":false,
                "dataType":"string"
            },
			{
                "name":"programme_id",
                "description":"Reading all friends message for a particular programme by programme id",
                "paramType":"path",
                "required":true,
                "allowMultiple":false,
                "dataType":"string"
            }
            ],
            "errorResponses":[
            {
                "code":400,
                "reason":""
            },
            {
                "code":403,
                "reason":""
            },
            {
                "code":405,
                "reason":""
            },
            {
                "code":409,
                "reason":""
            }
            ]
        }
        ]
    },
	{
        "path":"/messages/public/{channel_id}.json?auth_token={auth_token}",
        "description":"Operation for getting latest public messages depending on the latest message or logged in user viewing channel.",
        "operations":[
        {
            "httpMethod":"GET",
            "summary":"Read latest public messages.<strong style=\"color: black\">(Auth)</strong>",
            "responseClass":"void",
            "nickname":"getPublicMessages",
            "parameters":[
            {
                "name":"auth_token",
                "description":"The auth token required for getting public latest messages.",
                "paramType":"path",
                "required":true,
                "allowMultiple":false,
                "dataType":"string"
            },
			{
                "name":"channel_id",
                "description":"Channel id is for which message will be fetch.",
                "paramType":"path",
                "required":true,
                "allowMultiple":false,
                "dataType":"integer"
            }
            ],
            "errorResponses":[
            {
                "code":400,
                "reason":""
            },
            {
                "code":403,
                "reason":""
            },
            {
                "code":405,
                "reason":""
            },
            {
                "code":409,
                "reason":""
            }
            ]
        }
        ]
    },
	{
        "path":"/messages/private/{channel_id}.json?auth_token={auth_token}",
        "description":"Operation for getting latest private messages depending on the latest message or logged in user viewing channel.",
        "operations":[
        {
            "httpMethod":"GET",
            "summary":"Read latest private messages.<strong style=\"color: black\">(Auth)</strong>",
            "responseClass":"void",
            "nickname":"getPrivateMessages",
            "parameters":[
            {
                "name":"auth_token",
                "description":"The auth token required for getting private latest messages.",
                "paramType":"path",
                "required":true,
                "allowMultiple":false,
                "dataType":"string"
            },
			{
                "name":"channel_id",
                "description":"Channel id is for which message will be fetch.",
                "paramType":"path",
                "required":true,
                "allowMultiple":false,
                "dataType":"integer"
            }
            ],
            "errorResponses":[
            {
                "code":400,
                "reason":""
            },
            {
                "code":403,
                "reason":""
            },
            {
                "code":405,
                "reason":""
            },
            {
                "code":409,
                "reason":""
            }
            ]
        }
        ]
    },
    {
        "path":"/messages/{message_id}.json?auth_token={auth_token}",
        "description":"Operation for updating a message.",
        "operations":[
        {
            "httpMethod":"PUT",
            "summary":"Update a message by id. <strong style=\"color: black\">(Auth)</strong>",
            "responseClass":"void",
            "nickname":"putUpdateMessageById",
            "parameters":[
			{
                "name":"message_id",
                "description":"Message id required for posting a message",
                "paramType":"path",
                "required":true,
                "allowMultiple":false,
                "dataType":"string"
            },
			{
                "name":"auth_token",
                "description":"Auth token required for posting a message",
                "paramType":"path",
                "required":true,
                "allowMultiple":false,
                "dataType":"string"
            },
            {
                "name":"message[channel_id]",
                "paramType":"query",
                "required":true,
                "allowMultiple":false,
                "dataType":"integer"
            },
            {
                "name":"message[programme_id]",
                "paramType":"query",
                "required":true,
                "allowMultiple":false,
                "dataType":"integer"
            },
            {
                "name":"message[message]",
                "paramType":"query",
                "required":false,
                "allowMultiple":false,
                "dataType":"string"
            },
            {
                "name":"message[view_ability]",
                "paramType":"query",
                "required":false,
                "allowMultiple":false,
                "dataType":"string"
            }
            ],
            "errorResponses":[
            {
                "code":400,
                "reason":"Message id is missing."
            },
            {
                "code":401,
                "reason":""
            },
            {
                "code":405,
                "reason":""
            },
            {
                "code":409,
                "reason":""
            }
            ]
        }
        ]
    },
    {
        "path":"/messages/{message_id}.json?auth_token={auth_token}",
        "description":"Operation for removing a message.",
        "operations":[
        {
            "httpMethod":"DELETE",
            "summary":"Delete a message by message id.",
            "notes":"This can only be done by the logged in user.",
            "responseClass":"void",
            "nickname":"deleteMessageById",
            "parameters":[
           {
                "name":"auth_token",
                "description":"The auth token required for removing a message.",
                "paramType":"path",
                "required": true,
                "allowMultiple":false,
                "dataType":"string"
            },
            {
                "name":"message_id",
                "description":"The message id is required for delete a message",
                "paramType":"path",
                "required":true,
                "allowMultiple":false,
                "dataType":"integer"
            }
            ],
            "errorResponses":[
            {
                "code":400,
                "reason":""
            },
            {
                "code":401,
                "reason":""
            },
            {
                "code":403,
                "reason":""
            },
            {
                "code":405,
                "reason":""
            },
            {
                "code":409,
                "reason":""
            }
            ]
        }
        ]
    }
    ]
}